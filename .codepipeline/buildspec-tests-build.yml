version: 0.2

env:
  variables:
    testsuites: >-
      throttling
      session-timeout

phases:
  install:
    runtime-versions:
      python: 3.9

    commands:
      - apt update
      - apt install -y xvfb libxi6 libgconf-2-4 libnss3

      # install google chrome
      - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
      - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
      - apt-get -y update
      - apt-get install -y google-chrome-stable

      # install chromedriver
      - apt-get install -yqq unzip jq
      - curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json | jq -rc '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64").url' > /tmp/chromedriver_url
      - wget -O /tmp/chromedriver.zip `cat /tmp/chromedriver_url`
      - unzip -j /tmp/chromedriver.zip chromedriver-linux64/chromedriver -d /usr/local/bin/

      # upgrade pip
      - pip install --upgrade pip

      - apt-get install -f -y

  pre_build:
    commands:
      - cd $CODEBUILD_SRC_DIR
      - VENV_TESTS='/venv/eas-tests'
      - python3.9 -m venv $VENV_TESTS
      - . $VENV_TESTS/bin/activate
      - chmod +x environment.sh
      - . ./environment.sh
      - export ENVIRONMENT=preview
      - python3.9 -m pip install --upgrade pip wheel setuptools
      - make bootstrap

  build:
    on-failure: CONTINUE
    commands:
      # - make test-broadcast-flow; exit 0
      # - make test-cbc-integration; exit 0
      # - make test-platform-admin-flow; exit 0
      # - make test-authentication-flow; exit 0
      # - make test-links-and-cookies; exit 0
      # - make test-template-flow; exit 0
      # - make test-user-operations; exit 0
      - make test-throttling; exit 0
      - make test-session-timeout; exit 0
      - echo "Test run completed."
      - touch "$(pwd)/test-failures"
      - chmod +rw "$(pwd)/test-failures"
      - python3.9 ./scripts/report-test-results.py $(pwd) $testsuites

  post_build:
    commands:
      - python3.9 ./scripts/signal-build-pass-or-fail.py $(pwd) $testsuites

artifacts:
  files:
    - screenshots/*
    - functional-test-reports/*
    - test-failures
