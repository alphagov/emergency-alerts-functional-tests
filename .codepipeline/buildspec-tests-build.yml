version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9

    commands:
      - apt update
      - apt install -y xvfb libxi6 libgconf-2-4 libnss3
      - cd /tmp/
      - wget https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
      - unzip chromedriver_linux64.zip
      - mv chromedriver /usr/bin/chromedriver
      - apt-get install -f -y

  pre_build:
    commands:
      - cd $CODEBUILD_SRC_DIR
      - VENV_TESTS='/venv/eas-tests'
      - python3.9 -m venv $VENV_TESTS
      - . $VENV_TESTS/bin/activate
      - chmod +x environment.sh
      - . ./environment.sh
      - export ENVIRONMENT=preview
      - python3.9 -m pip install --upgrade pip wheel setuptools
      - make bootstrap

  build:
    on-failure: CONTINUE
    commands:
      - make test-broadcast-flow; exit 0
      - make test-cbc-integration; exit 0
      - make test-platform-admin-flow; exit 0
      - echo "Test run completed."

      - echo "Collecting failure data..."
      - touch ./test-failures
      - python3.9 ./scripts/collate-failure-info.py ./functional-test-reports/broadcast-flow ./test-failures
      - python3.9 ./scripts/collate-failure-info.py ./functional-test-reports/cbc-integration ./test-failures
      - python3.9 ./scripts/collate-failure-info.py ./functional-test-reports/platform-admin-flow ./test-failures

      - echo "Reporting test failures..."
      - python3.9 ./scripts/report-test-failures.py ./test-failures

  post_build:
    commands:
      - echo "Signal overall build success or failure..."
      - chmod +x ./scripts/pass-or-fail-build.sh
      - cat ./functional-test-reports/broadcast-flow | ./scripts/pass-or-fail-build.sh
      - cat ./functional-test-reports/cbc-integration | ./scripts/pass-or-fail-build.sh
      - cat ./functional-test-reports/platform-admin-flow | ./scripts/pass-or-fail-build.sh

artifacts:
  files:
    - screenshots/*
    - functional-test-reports/*
